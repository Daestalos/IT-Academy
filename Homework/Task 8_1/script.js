// N.8 Домашнее задание DRINKS_HASH_FUNC

// Создать проект DRINKS_HASH_FUNC. 
// 1.
// Разработать класс HashStorageFunc в функциональном стиле (т.е. функцию-конструктор) для хранения в приватном хэше произвольных пар ключ-значение.
// Ключ может быть любой строкой; значение может иметь любой тип, в том числе векторный (хэш, массив и т.д.)
// Класс должен иметь следующий интерфейс (т.е. иметь следующие публичные методы):
// ●	addValue(key,value) — сохраняет указанное значение под указанным ключом;
// ●	getValue(key) — возвращает значение по указанному ключу либо undefined;
// ●	deleteValue(key) — удаляет значение с указанным ключом, возвращает true если значение было удалено и false если такого значения не было в хранилище;
// ●	getKeys() — возвращает массив, состоящий из одних ключей.
// Класс должен быть чистым (не должен использовать никаких глобальных переменных, не, должен «пачкать экран»).
// Класс должен быть универсальным, т.е. не зависеть ни от структуры хранимых данных, ни от способа их последующего использования (в т.ч. не должен содержать никаких ссылок на DOM, т.к. может использоваться и вообще без веб-страницы).

// 2.
// Создать объект drinkStorage класса HashStorageFunc для хранения рецептов напитков.
// Ключом является название напитка; значением — информация о напитке (алкогольный напиток или нет, строка с рецептом приготовления и т.д. по желанию).

// 3.
// Разработать веб-страницу для работы с хранилищем рецептов напитков.
// На странице должны быть кнопки:
// ●	«ввод информации о напитке» — последовательно спрашивает название напитка, алкогольный он или нет, рецепт его приготовления; сохраняет информацию о напитке в хранилище.
// ●	«получение информации о напитке» — спрашивает название напитка и выдаёт (на страницу, в консоль или в alert) либо информацию о нём (по примеру, приведённому ниже), либо сообщение об отсутствии такого напитка в хранилище.
// ●	«удаление информации о напитке» — спрашивает название напитка и удаляет его из хранилища (если он там есть) с выдачей соответствующего сообщения в информационное окно.
// ●	«перечень всех напитков» — выдаёт в информационное окно перечень всех напитков из хранилища (только названия).

// Пример информации о напитке:
// напиток Маргарита алкогольный: да рецепт приготовления: продукт, продукт... смешать...


const addData = document.getElementById("data");
const getInfo = document.getElementById("getInfo");
const deleteInfo = document.getElementById("deleteInfo");
const getAllInfo = document.getElementById("getAllInfo");
const text = document.getElementById("text");

function HashStorageFunc(){
    var drinkStorage = {
        'Мохито': `\n Алкогольный - да \n Информация о напитке: коктейль на основе светлого рома и листьев мяты. Происходит с острова Куба, стал популярен в США в 1980-х. Коктейль входит в список «современной классики» международной ассоциации барменов`
    };

    this.addValue = (key, value) => drinkStorage[key] = value
    this.getValue = (key) => drinkStorage[key] ? `Напиток "${key}" ${drinkStorage[key]}` : 'Информация о напитке отсутствует' 
    this.deleteValue = (key) => {
        if (drinkStorage[key]){
            delete drinkStorage[key]
            return true
        } else return false
    }
    this.getKeys = () => Object.keys(drinkStorage)
}

let drinkStorage = new HashStorageFunc()


addData.addEventListener('click', () => {
    let key = prompt("введите название напитка"),
    isAlc = prompt("он алкогольный?"),
    info = prompt("введите информацию о напитке");
    value = `\n Алкогольный - ${isAlc} \n Информация о напитке: ${info}`
    drinkStorage.addValue(key,value);
})

getInfo.addEventListener('click', ()=>{
    var key = prompt("введите название напитка");
    text.innerText = drinkStorage.getValue(key)
})

deleteInfo.addEventListener('click', ()=>{
    var key = prompt("введите название напитка");
    text.innerText = drinkStorage.deleteValue(key)
})

getAllInfo.addEventListener('click', ()=>{
    text.innerText = drinkStorage.getKeys()
})


